name: Terraform Provision Infrastructure

on:
  workflow_dispatch:
  push:
    paths:
      - 'infra/**'

permissions:
  contents: write   # ✅ Allow GitHub Actions to push changes

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  terraform_provision:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init & Apply
        run: |
          cd infra
          terraform init
          terraform apply -auto-approve

      - name: Extract Outputs & Push to Branch
        run: |
          cd infra
          echo "[INFO] Extracting Terraform outputs..."
          OUTPUT=$(terraform output -json || echo "")

          if [ -z "$OUTPUT" ] || ! echo "$OUTPUT" | jq empty >/dev/null 2>&1; then
            echo "[WARN] Terraform outputs invalid or empty. Falling back to AWS CLI."
            pip install awscli --quiet

            INSTANCE_IPS=$(aws ec2 describe-instances \
              --filters "Name=tag:Name,Values=k8s-*" \
              --query "Reservations[*].Instances[*].PublicIpAddress" \
              --output text)

            if [ -z "$INSTANCE_IPS" ]; then
              echo "[ERROR] No instance IPs found. Destroying infra..."
              terraform destroy -auto-approve
              exit 1
            fi

            echo "$INSTANCE_IPS" | tr '\t' '\n' > instance_ips.txt

            if [ ! -f k8s-key.pem ]; then
              echo "[ERROR] Private key not found. Destroying infra..."
              terraform destroy -auto-approve
              exit 1
            fi

          else
            echo "$OUTPUT" > outputs.json
            echo "$OUTPUT" | jq -r '.instance_ips.value[]?' > instance_ips.txt
            echo "$OUTPUT" | jq -r '.private_key.value' > k8s-key.pem
            chmod 600 k8s-key.pem
          fi

          echo "[INFO] Final extracted IPs:"
          cat instance_ips.txt

          # ✅ Prepare infra-state branch
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git fetch origin

          if git ls-remote --exit-code --heads origin infra-state; then
            git switch infra-state
          else
            git switch --orphan infra-state
          fi

          mkdir -p infra-state
          cp instance_ips.txt k8s-key.pem infra-state/
          git add infra-state/
          git commit -m "Update infra state"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git infra-state --force
