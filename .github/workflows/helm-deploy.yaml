name: Deploy with Helm

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  helm-deploy:
    name: Deploy Microservices via Helm
    runs-on: ubuntu-latest

    steps:
      # ✅ Checkout main branch (for helm-charts folder)
      - name: ✅ Checkout main branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      # ✅ Checkout only 'infra-state' folder from 'infra-state' branch
      - name: ✅ Checkout infra-state files
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          ref: infra-state
          path: infra-tmp
          sparse-checkout: |
            infra-state/
          sparse-checkout-cone-mode: false

      # ✅ Move infra-state to usable location
      - name: ✅ Move infra-state
        run: |
          mv infra-tmp/infra-state ./infra-state

      # ✅ Extract master node IP
      - name: ✅ Extract master node IP
        run: |
          KEY="infra-state/k8s-key.pem"
          chmod 600 $KEY
          FIRST_NODE=$(head -n1 infra-state/instance_ips.txt)
          echo "FIRST_NODE=$FIRST_NODE" >> $GITHUB_ENV

      # ✅ Check if helm-charts directory exists
      - name: ✅ Check if helm-charts directory exists
        run: |
          if [ ! -d "helm-charts" ]; then
            echo "❌ 'helm-charts/' directory not found in main branch!"
            exit 1
          fi

      # ✅ Copy Helm charts to master node
      - name: ✅ Copy Helm charts to master node
        run: |
          echo "[INFO] Copying Helm charts to $FIRST_NODE"
          scp -o StrictHostKeyChecking=no -i infra-state/k8s-key.pem -r helm-charts ubuntu@$FIRST_NODE:/home/ubuntu/helm-charts

      # ✅ Deploy using Helm
      - name: ✅ Deploy with Helm
        run: |
          ssh -o StrictHostKeyChecking=no -i infra-state/k8s-key.pem ubuntu@$FIRST_NODE "
            echo '[INFO] Installing Helm if not already installed...'
            if ! command -v helm &> /dev/null; then
              sudo snap install helm --classic
            fi

            echo '[INFO] Deploying Helm charts...'
            cd /home/ubuntu/helm-charts

            for svc in catalogue frontend recommendation voting; do
              if [ -d \"\$svc\" ]; then
                helm upgrade --install \$svc ./\$svc
              else
                echo \"⚠️ Chart folder \$svc not found inside helm-charts/, skipping...\"
              fi
            done

            echo '[INFO] Waiting for pods to be ready...'
            sleep 10
            sudo microk8s kubectl get pods -A
          "
